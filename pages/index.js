import Head from 'next/head'
import Link from 'next/link'
import { useEffect, useState } from 'react'
import { QueryClient, useQuery } from 'react-query'
import { dehydrate } from 'react-query/hydration'
import api, {getServers} from '../endpoints/endpoints'
import withAuthenticate from '../components/HOC-withAuthenticate'

export const getServerSideProps = async () => {
  const queryClient = new QueryClient()

  await queryClient.prefetchQuery(['servers'], () => getServers())

  return{
      props: {
          dehydratedState: dehydrate(queryClient)
      }
  }
}

function Home(props) {
  const {data, isLoading, isError} = useQuery(['servers'], () => getServers())

  const [myServers, setMyServers] = useState([])

  useEffect(() => {
    if(data){
      setMyServers(data)
    }
  }, [data])

  if(isLoading){
    return <div>Loading...</div>
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main>
          {
            myServers[0] ?
              myServers.map(server =>
                <div key={server.id}>
                  <Link href={`/server/${server.id}`}>
                    <h4 >{server.name}</h4>
                  </Link>
                </div>
              )
              : <div>error</div>
          }
      </main>
    </div>
  )
}

export default withAuthenticate(Home)